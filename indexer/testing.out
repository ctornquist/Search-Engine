bash -v testing.sh
switchml () {  typeset swfound=1;
 if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
 typeset swname='main';
 if [ -e /usr/share/Modules/libexec/modulecmd.tcl ]; then
 typeset swfound=0;
 unset MODULES_USE_COMPAT_VERSION;
 fi;
 else
 typeset swname='compatibility';
 if [ -e /usr/share/Modules/libexec/modulecmd-compat ]; then
 typeset swfound=0;
 MODULES_USE_COMPAT_VERSION=1;
 export MODULES_USE_COMPAT_VERSION;
 fi;
 fi;
 if [ $swfound -eq 0 ]; then
 echo "Switching to Modules $swname version";
 source /usr/share/Modules/init/bash;
 else
 echo "Cannot switch to Modules $swname version, command not found";
 return 1;
 fi
}
module () {  _module_raw "$@" 2>&1
}
_module_raw () {  unset _mlshdbg;
 if [ "${MODULES_SILENT_SHELL_DEBUG:-0}" = '1' ]; then
 case "$-" in 
 *v*x*)
 set +vx;
 _mlshdbg='vx'
 ;;
 *v*)
 set +v;
 _mlshdbg='v'
 ;;
 *x*)
 set +x;
 _mlshdbg='x'
 ;;
 *)
 _mlshdbg=''
 ;;
 esac;
 fi;
 unset _mlre _mlIFS;
 if [ -n "${IFS+x}" ]; then
 _mlIFS=$IFS;
 fi;
 IFS=' ';
 for _mlv in ${MODULES_RUN_QUARANTINE:-};
 do
 if [ "${_mlv}" = "${_mlv##*[!A-Za-z0-9_]}" -a "${_mlv}" = "${_mlv#[0-9]}" ]; then
 if [ -n "`eval 'echo ${'$_mlv'+x}'`" ]; then
 _mlre="${_mlre:-}${_mlv}_modquar='`eval 'echo ${'$_mlv'}'`' ";
 fi;
 _mlrv="MODULES_RUNENV_${_mlv}";
 _mlre="${_mlre:-}${_mlv}='`eval 'echo ${'$_mlrv':-}'`' ";
 fi;
 done;
 if [ -n "${_mlre:-}" ]; then
 eval `eval ${_mlre}/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash '"$@"'`;
 else
 eval `/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash "$@"`;
 fi;
 _mlstatus=$?;
 if [ -n "${_mlIFS+x}" ]; then
 IFS=$_mlIFS;
 else
 unset IFS;
 fi;
 unset _mlre _mlv _mlrv _mlIFS;
 if [ -n "${_mlshdbg:-}" ]; then
 set -$_mlshdbg;
 fi;
 unset _mlshdbg;
 return $_mlstatus
}
make clean
make[1]: Entering directory '/net/ifs-users/ctornquist/cs50/labs/tse-ctornquist/indexer'
rm -f *~ *.o *.dSYM
rm -f indexer
rm -f indextest
rm -f core
rm -f idx1* idx2* idx3* idx4*
make[1]: Leaving directory '/net/ifs-users/ctornquist/cs50/labs/tse-ctornquist/indexer'
make all
make[1]: Entering directory '/net/ifs-users/ctornquist/cs50/labs/tse-ctornquist/indexer'
gcc -Wall -g -pedantic -std=c11 -ggdb -I ../libcs50 -I ../common   -c -o indexer.o indexer.c
gcc -Wall -g -pedantic -std=c11 -ggdb -I ../libcs50 -I ../common -lm indexer.o ../libcs50/webpage.o ../common/pagedir.o ../common/word.o ../common/index.o ../libcs50/libcs50-given.a ../common/common.a -o indexer
gcc -Wall -g -pedantic -std=c11 -ggdb -I ../libcs50 -I ../common   -c -o indextest.o indextest.c
gcc -Wall -g -pedantic -std=c11 -ggdb -I ../libcs50 -I ../common -lm indextest.o ../libcs50/webpage.o ../common/pagedir.o ../common/word.o ../common/index.o ../libcs50/libcs50-given.a ../common/common.a -o indextest
make[1]: Leaving directory '/net/ifs-users/ctornquist/cs50/labs/tse-ctornquist/indexer'
clear
[H[2J[3J
#testing with the wrong number of arguments
./indexer here are too many arguments
Needs two arguments.

#testing with too few arguments
./indexer one
Needs two arguments.

#testing on a non existant directory
./indexer i_dont_exist/ idx1
Can't read from directory or not crawler directory

#testing on a non-crawler directory
./indexer fake idx1
Can't read from directory or not crawler directory

# testing the directory on the directory made from crawling the letter playground to depth 5
echo Starting indexer
Starting indexer
./indexer crawler1 idx1
echo Index file made
Index file made

echo Starting indextest
Starting indextest
./indextest idx1 idx1_remake
echo Indextest file made
Indextest file made

#sorting the files
gawk -f indexsort.awk idx1 > idx1.sorted
gawk -f indexsort.awk idx1_remake > idx1_remake.sorted
echo Files sorted
Files sorted

#comparing each to the correct answer file
echo Comparing files
Comparing files
diff --brief idx1.sorted ans1
diff --brief idx1_remake.sorted ans1
echo Done!
Done!



# testing the directory on the directory made from crawling the wiki playground to depth 1
echo Starting indexer
Starting indexer
./indexer crawler2 idx2
echo Index file made
Index file made

echo Starting indextest
Starting indextest
./indextest idx2 idx2_remake
echo Indextest file made
Indextest file made

#sorting the files
gawk -f indexsort.awk idx2 > idx2.sorted
gawk -f indexsort.awk idx2_remake > idx2_remake.sorted
echo Files sorted
Files sorted

#comparing each to the correct answer file
echo Comparing files
Comparing files
diff --brief idx2.sorted ans2
diff --brief idx2_remake.sorted ans2
echo Done!
Done!



# testing the directory on the directory made from crawling the to scrape playground to depth 1
echo Starting indexer
Starting indexer
./indexer crawler3 idx3
echo Index file made
Index file made

echo Starting indextest
Starting indextest
./indextest idx3 idx3_remake
echo Indextest file made
Indextest file made

#sorting the files
gawk -f indexsort.awk idx3_remake > idx3.sorted
gawk -f indexsort.awk idx3_remake > idx3_remake.sorted
echo Files sorted
Files sorted

#comparing each to the correct answer file
echo Comparing files
Comparing files
diff --brief idx3.sorted ans3
diff --brief idx3_remake.sorted ans3
echo Done!
Done!



# testing the directory on the directory made from crawling the to scrape playground to depth 2
echo Starting indexer
Starting indexer
./indexer crawler4 idx4
echo Index file made
Index file made

echo Starting indextest
Starting indextest
./indextest idx4 idx4_remake
echo Indextest file made
Indextest file made

#sorting the files
gawk -f indexsort.awk idx4_remake > idx4.sorted
gawk -f indexsort.awk idx4_remake > idx4_remake.sorted
echo Files sorted
Files sorted

#comparing each to the correct answer file
echo Comparing files
Comparing files
diff --brief idx4.sorted ans4
diff --brief idx4_remake.sorted ans4
echo Done!
Done!
